<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="picoldpwd.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="picnewpwd.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="picnewconfirmpwd.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>